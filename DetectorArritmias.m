function varargout = DetectorArritmias(varargin)
% Escenario ideal intervalos elegidos
% DETECTORARRITMIAS MATLAB code for DetectorArritmias.fig
%      DETECTORARRITMIAS, by itself, creates a new DETECTORARRITMIAS or raises the existing
%      singleton*.
%
%      H = DETECTORARRITMIAS returns the handle to a new DETECTORARRITMIAS or the handle to
%      the existing singleton*.
%
%      DETECTORARRITMIAS('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in DETECTORARRITMIAS.M with the given input arguments.
%
%      DETECTORARRITMIAS('Property','Value',...) creates a new DETECTORARRITMIAS or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before DetectorArritmias_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to DetectorArritmias_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help DetectorArritmias

% Last Modified by GUIDE v2.5 18-Dec-2020 20:13:34

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @DetectorArritmias_OpeningFcn, ...
                   'gui_OutputFcn',  @DetectorArritmias_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before DetectorArritmias is made visible.
function DetectorArritmias_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to DetectorArritmias (see VARARGIN)

% Choose default command line output for DetectorArritmias
global dbname;
global username;
global password;
global driver;
global dburl;
global conexionBD;
dbname = 'mitarrythmiadatabase';
username = 'root';
password = 'root';
driver = 'com.mysql.jdbc.Driver';
dburl = ['jdbc:mysql://localhost:3306/' dbname];
javaclasspath('mysql-connector-java-5.1.47.jar');
[conexionBD] = conexion(dbname, username, password, driver, dburl); 

handles.output = hObject;
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes DetectorArritmias wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = DetectorArritmias_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on selection change in menuArritmias.
function menuArritmias_Callback(hObject, eventdata, handles)
% hObject    handle to menuArritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns menuArritmias contents as cell array
%        contents{get(hObject,'Value')} returns selected item from menuArritmias


% --- Executes during object creation, after setting all properties.
function menuArritmias_CreateFcn(hObject, eventdata, handles)
% hObject    handle to menuArritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_x_Arritmias_Callback(hObject, eventdata, handles)
% hObject    handle to edit_x_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_x_Arritmias as text
%        str2double(get(hObject,'String')) returns contents of edit_x_Arritmias as a double


% --- Executes during object creation, after setting all properties.
function edit_x_Arritmias_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_x_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_y_Arritmias_Callback(hObject, eventdata, handles)
% hObject    handle to edit_y_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_y_Arritmias as text
%        str2double(get(hObject,'String')) returns contents of edit_y_Arritmias as a double


% --- Executes during object creation, after setting all properties.
function edit_y_Arritmias_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_y_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global count;
global textoactual;
global textoant;
global ecg;
global ecgs;
global ecgs2;
global PicoR;

count = count + 1;

if(count == 1)
   %disp('Primera vez');
   x = get(handles.edit_x_Arritmias,'String');
   %disp(x);
   posx = str2double(x);
   xlim([posx-1000 posx+1000]);
   %ecg = getappdata(0, 'ecg');
   %ecg = ecg(:);
   pos2 = [posx ecgs(posx) 0];
   set(handles.edit_y_Arritmias, 'String', pos2(2));
   ecgplothandles = handles.ecgArritmias;
   hold on;

   textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
   
    for k=1:length(PicoR)
        if(PicoR(k, 2)<=pos2(1)+20 && PicoR(k, 2)>=pos2(1)-20)
            set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
        end
    end
    
    
else
       s = strcat('Vez ', count);
       %disp(s);
       %disp(count);
   delete(textoant);
   delete(textoactual);
   x = get(handles.edit_x_Arritmias,'String');
   %disp(x);
   posx = str2double(x);
   xlim([posx-1000 posx+1000]);
  % ecg = getappdata(0, 'ecg');
   %ecg = ecg(:);
   pos2 = [posx ecgs(posx) 0];
   set(handles.edit_y_Arritmias, 'String', pos2(2));
   ecgplothandles = handles.ecgArritmias;
   hold on;
   textoactual = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
    for k=1:length(PicoR)
        if(PicoR(k, 2)<=pos2(1)+20 && PicoR(k, 2)>=pos2(1)-20)
            set(handles.prms, 'String', num2str(PicoR(k, 12)));
            set(handles.qrsms, 'String', num2str(PicoR(k, 13)));
            set(handles.ritmocardiaco, 'String', num2str(PicoR(k, 14)));
            set(handles.ritmoregular, 'String', num2str(PicoR(k, 18)));
        end
    end
end


% --- Executes on button press in btnAnalizarArritmias.
function btnAnalizarArritmias_Callback(hObject, eventdata, handles)
% hObject    handle to btnAnalizarArritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
set(handles.arritmiaDetectada, 'String', '');
global conexionBD;
global click;
global ecgs;
global ecgs2;
global Pindex;
global mayor;
global dbname;
global username;
global password;
global driver;
global dburl;
global ecg;
global PicoR;

global NSyR;
global SyBr; 
global SyTa;
global SyAr;
global AtFl;
global AtFib;
global VTa; 
global VFl; 
global B1Gr; 
global OtraArritmia; global Resultados;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VParregloOtraArritmia;

click = true;
cla(handles.ecgArritmias);
ecgArritmias = handles.ecgArritmias;
items = get(handles.menuArritmias,'String');
seleccionarRegistro=get(handles.menuArritmias, 'value');
registromit = items{seleccionarRegistro};
disp(registromit);

querieAnotacion = ["SELECT * FROM mitarrythmiadatabase.anotacionesaux where registro = '" registromit "';"];
assignin('base','querieAnotacion', strjoin(querieAnotacion, ''));
anotaciones = select(conexionBD, strjoin(querieAnotacion, ''));
assignin('base','anotaciones', anotaciones);
columnasArritmias = ["picoR" "PRms" "QRSms" "Ritmo cardiaco" "HayOndaP" "Ritmo regular"];
columnasArritmiasFibAur = ["ranterior" "ractual" "segundoanterior" "restoanterior" "segundoactual" "restoactual" "tiemporr" "minutoanterior" "segundoanterior" "minutoactual" "segundoactual" "PRms" "QRSms" "Ritmo cardiaco" "Ritmo regular"];
anotacionArritmia = [anotaciones(:,1) anotaciones(:,2) anotaciones(:,3) anotaciones(:,4) anotaciones(:,5) anotaciones(:,6) anotaciones(:,7) anotaciones(:,8) anotaciones(:,9) anotaciones(:,10) anotaciones(:,11) anotaciones(:,12) anotaciones(:,13) anotaciones(:,14)];
set(handles.tablaAnotaciones,'ColumnName',anotacionArritmia.Properties.VariableNames);

%set(handles.tablaAnotaciones,'data',[])
set(handles.tablaAnotaciones, 'data', table2cell(anotacionArritmia));
fs = 360;
[ecgnormal, ecg, Rindex, Q_index, QOn_index, S_index, K_index,  anotacion] = detectarPuntoR(conexionBD, registromit, seleccionarRegistro, fs, 0);
[ecgs2, Rindex2, Tindex, Pindex, P_ON_index, anotacionesP] = detectarOndasPT(conexionBD, registromit, seleccionarRegistro, ecgnormal, fs, Rindex, Q_index, S_index, K_index,0);
[NSyR, SyBr, AtFl, AtFib, VTa, VFl, OtraArritmia, Resultados]= detectarArritmias(conexionBD, registromit, seleccionarRegistro, ecgs2, fs, Rindex2, Pindex, P_ON_index, S_index, Q_index, QOn_index, Tindex, K_index);
%[ritmoregular, bradicardiamatriz, taquicardiamatriz, PicoR, NSyR, SyBr, SyTa, SyAr, AtFl, AtFib, VTa, VFl, B1Gr, OtraArritmia]= detectarArritmiasLiteratura(conexionBD, registromit, seleccionarRegistro, ecgs2, fs, Rindex2, Pindex, S_index, Q_index, Tindex, K_index);
assignin('base', 'ecgs', ecgs2);
%%
%Filtro pasa alta
[BWb,BWa] = butter(5,[1.0].*2/fs,'high');
%Aplicas
data = filtfilt(BWb,BWa,ecg);
%Filtro rechaza banda
[b1,a1]=fir1(100,[59 61]*2/fs,'stop');
%Aplicar a la senal anterior
ecgd=filtfilt(b1,a1,data);
%filtro pasabanda
[b2,a2]=fir1(10,[5 10]*2/fs);
%Graficar la figura 3
ecgs=filtfilt(b2,a2,ecgd);

ecgs=ecgs/max(abs(ecgs)) * 2;
%largo = [-1.045	-0.95	-0.855	-0.76	-0.665	-0.57	-0.475	-0.38	-0.285	-0.19	-0.095	0	0.095	0.19	0.285	0.38	0.475	0.57	0.665	0.76	0.855	0.95	1.045];
largo = [-2	-1.6 -1.2 -0.8 -0.4 0	0.4	0.8	1.2 1.6	2];
ancho = [0	72	144	216	288	360	432	504	576	648	720	792	864	936	1008	1080	1152	1224	1296	1368	1440	1512	1584	1656	1728	1800	1872	1944	2016	2088	2160	2232	2304	2376	2448	2520	2592	2664	2736	2808	2880	2952	3024	3096	3168	3240	3312	3384	3456	3528	3600	3672	3744	3816	3888	3960	4032	4104	4176	4248	4320	4392	4464	4536	4608	4680	4752	4824	4896	4968	5040	5112	5184	5256	5328	5400	5472	5544	5616	5688	5760	5832	5904	5976	6048	6120	6192	6264	6336	6408	6480	6552	6624	6696	6768	6840	6912	6984	7056	7128	7200	7272	7344	7416	7488	7560	7632	7704	7776	7848	7920	7992	8064	8136	8208	8280	8352	8424	8496	8568	8640	8712	8784	8856	8928	9000	9072	9144	9216	9288	9360	9432	9504	9576	9648	9720	9792	9864	9936	10008	10080	10152	10224	10296	10368	10440	10512	10584	10656	10728	10800	10872	10944	11016	11088	11160	11232	11304	11376	11448	11520	11592	11664	11736	11808	11880	11952	12024	12096	12168	12240	12312	12384	12456	12528	12600	12672	12744	12816	12888	12960	13032	13104	13176	13248	13320	13392	13464	13536	13608	13680	13752	13824	13896	13968	14040	14112	14184	14256	14328	14400	14472	14544	14616	14688	14760	14832	14904	14976	15048	15120	15192	15264	15336	15408	15480	15552	15624	15696	15768	15840	15912	15984	16056	16128	16200	16272	16344	16416	16488	16560	16632	16704	16776	16848	16920	16992	17064	17136	17208	17280	17352	17424	17496	17568	17640	17712	17784	17856	17928	18000	18072	18144	18216	18288	18360	18432	18504	18576	18648	18720	18792	18864	18936	19008	19080	19152	19224	19296	19368	19440	19512	19584	19656	19728	19800	19872	19944	20016	20088	20160	20232	20304	20376	20448	20520	20592	20664	20736	20808	20880	20952	21024	21096	21168	21240	21312	21384	21456	21528	21600	21672	21744	21816	21888	21960	22032	22104	22176	22248	22320	22392	22464	22536	22608	22680	22752	22824	22896	22968	23040	23112	23184	23256	23328	23400	23472	23544	23616	23688	23760	23832	23904	23976	24048	24120	24192	24264	24336	24408	24480	24552	24624	24696	24768	24840	24912	24984	25056	25128	25200	25272	25344	25416	25488	25560	25632	25704	25776	25848	25920	25992	26064	26136	26208	26280	26352	26424	26496	26568	26640	26712	26784	26856	26928	27000	27072	27144	27216	27288	27360	27432	27504	27576	27648	27720	27792	27864	27936	28008	28080	28152	28224	28296	28368	28440	28512	28584	28656	28728	28800	28872	28944	29016	29088	29160	29232	29304	29376	29448	29520	29592	29664	29736	29808	29880	29952	30024	30096	30168	30240	30312	30384	30456	30528	30600	30672	30744	30816	30888	30960	31032	31104	31176	31248	31320	31392	31464	31536	31608	31680	31752	31824	31896	31968	32040	32112	32184	32256	32328	32400	32472	32544	32616	32688	32760	32832	32904	32976	33048	33120	33192	33264	33336	33408	33480	33552	33624	33696	33768	33840	33912	33984	34056	34128	34200	34272	34344	34416	34488	34560	34632	34704	34776	34848	34920	34992	35064	35136	35208	35280	35352	35424	35496	35568	35640	35712	35784	35856	35928	36000	36072	36144	36216	36288	36360	36432	36504	36576	36648	36720	36792	36864	36936	37008	37080	37152	37224	37296	37368	37440	37512	37584	37656	37728	37800	37872	37944	38016	38088	38160	38232	38304	38376	38448	38520	38592	38664	38736	38808	38880	38952	39024	39096	39168	39240	39312	39384	39456	39528	39600	39672	39744	39816	39888	39960	40032	40104	40176	40248	40320	40392	40464	40536	40608	40680	40752	40824	40896	40968	41040	41112	41184	41256	41328	41400	41472	41544	41616	41688	41760	41832	41904	41976	42048	42120	42192	42264	42336	42408	42480	42552	42624	42696	42768	42840	42912	42984	43056	43128	43200	43272	43344	43416	43488	43560	43632	43704	43776	43848	43920	43992	44064	44136	44208	44280	44352	44424	44496	44568	44640	44712	44784	44856	44928	45000	45072	45144	45216	45288	45360	45432	45504	45576	45648	45720	45792	45864	45936	46008	46080	46152	46224	46296	46368	46440	46512	46584	46656	46728	46800	46872	46944	47016	47088	47160	47232	47304	47376	47448	47520	47592	47664	47736	47808	47880	47952	48024	48096	48168	48240	48312	48384	48456	48528	48600	48672	48744	48816	48888	48960	49032	49104	49176	49248	49320	49392	49464	49536	49608	49680	49752	49824	49896	49968	50040	50112	50184	50256	50328	50400	50472	50544	50616	50688	50760	50832	50904	50976	51048	51120	51192	51264	51336	51408	51480	51552	51624	51696	51768	51840	51912	51984	52056	52128	52200	52272	52344	52416	52488	52560	52632	52704	52776	52848	52920	52992	53064	53136	53208	53280	53352	53424	53496	53568	53640	53712	53784	53856	53928	54000	54072	54144	54216	54288	54360	54432	54504	54576	54648	54720	54792	54864	54936	55008	55080	55152	55224	55296	55368	55440	55512	55584	55656	55728	55800	55872	55944	56016	56088	56160	56232	56304	56376	56448	56520	56592	56664	56736	56808	56880	56952	57024	57096	57168	57240	57312	57384	57456	57528	57600	57672	57744	57816	57888	57960	58032	58104	58176	58248	58320	58392	58464	58536	58608	58680	58752	58824	58896	58968	59040	59112	59184	59256	59328	59400	59472	59544	59616	59688	59760	59832	59904	59976	60048	60120	60192	60264	60336	60408	60480	60552	60624	60696	60768	60840	60912	60984	61056	61128	61200	61272	61344	61416	61488	61560	61632	61704	61776	61848	61920	61992	62064	62136	62208	62280	62352	62424	62496	62568	62640	62712	62784	62856	62928	63000	63072	63144	63216	63288	63360	63432	63504	63576	63648	63720	63792	63864	63936	64008	64080	64152	64224	64296	64368	64440	64512	64584	64656	64728	64800	64872	64944	65016	65088	65160	65232	65304	65376	65448	65520	65592	65664	65736	65808	65880	65952	66024	66096	66168	66240	66312	66384	66456	66528	66600	66672	66744	66816	66888	66960	67032	67104	67176	67248	67320	67392	67464	67536	67608	67680	67752	67824	67896	67968	68040	68112	68184	68256	68328	68400	68472	68544	68616	68688	68760	68832	68904	68976	69048	69120	69192	69264	69336	69408	69480	69552	69624	69696	69768	69840	69912	69984	70056	70128	70200	70272	70344	70416	70488	70560	70632	70704	70776	70848	70920	70992	71064	71136	71208	71280	71352	71424	71496	71568	71640	71712	71784	71856	71928	72000	72072	72144	72216	72288	72360	72432	72504	72576	72648	72720	72792	72864	72936	73008	73080	73152	73224	73296	73368	73440	73512	73584	73656	73728	73800	73872	73944	74016	74088	74160	74232	74304	74376	74448	74520	74592	74664	74736	74808	74880	74952	75024	75096	75168	75240	75312	75384	75456	75528	75600	75672	75744	75816	75888	75960	76032	76104	76176	76248	76320	76392	76464	76536	76608	76680	76752	76824	76896	76968	77040	77112	77184	77256	77328	77400	77472	77544	77616	77688	77760	77832	77904	77976	78048	78120	78192	78264	78336	78408	78480	78552	78624	78696	78768	78840	78912	78984	79056	79128	79200	79272	79344	79416	79488	79560	79632	79704	79776	79848	79920	79992	80064	80136	80208	80280	80352	80424	80496	80568	80640	80712	80784	80856	80928	81000	81072	81144	81216	81288	81360	81432	81504	81576	81648	81720	81792	81864	81936	82008	82080	82152	82224	82296	82368	82440	82512	82584	82656	82728	82800	82872	82944	83016	83088	83160	83232	83304	83376	83448	83520	83592	83664	83736	83808	83880	83952	84024	84096	84168	84240	84312	84384	84456	84528	84600	84672	84744	84816	84888	84960	85032	85104	85176	85248	85320	85392	85464	85536	85608	85680	85752	85824	85896	85968	86040	86112	86184	86256	86328	86400	86472	86544	86616	86688	86760	86832	86904	86976	87048	87120	87192	87264	87336	87408	87480	87552	87624	87696	87768	87840	87912	87984	88056	88128	88200	88272	88344	88416	88488	88560	88632	88704	88776	88848	88920	88992	89064	89136	89208	89280	89352	89424	89496	89568	89640	89712	89784	89856	89928	90000	90072	90144	90216	90288	90360	90432	90504	90576	90648	90720	90792	90864	90936	91008	91080	91152	91224	91296	91368	91440	91512	91584	91656	91728	91800	91872	91944	92016	92088	92160	92232	92304	92376	92448	92520	92592	92664	92736	92808	92880	92952	93024	93096	93168	93240	93312	93384	93456	93528	93600	93672	93744	93816	93888	93960	94032	94104	94176	94248	94320	94392	94464	94536	94608	94680	94752	94824	94896	94968	95040	95112	95184	95256	95328	95400	95472	95544	95616	95688	95760	95832	95904	95976	96048	96120	96192	96264	96336	96408	96480	96552	96624	96696	96768	96840	96912	96984	97056	97128	97200	97272	97344	97416	97488	97560	97632	97704	97776	97848	97920	97992	98064	98136	98208	98280	98352	98424	98496	98568	98640	98712	98784	98856	98928	99000	99072	99144	99216	99288	99360	99432	99504	99576	99648	99720	99792	99864	99936	100008	100080	100152	100224	100296	100368	100440	100512	100584	100656	100728	100800	100872	100944	101016	101088	101160	101232	101304	101376	101448	101520	101592	101664	101736	101808	101880	101952	102024	102096	102168	102240	102312	102384	102456	102528	102600	102672	102744	102816	102888	102960	103032	103104	103176	103248	103320	103392	103464	103536	103608	103680	103752	103824	103896	103968	104040	104112	104184	104256	104328	104400	104472	104544	104616	104688	104760	104832	104904	104976	105048	105120	105192	105264	105336	105408	105480	105552	105624	105696	105768	105840	105912	105984	106056	106128	106200	106272	106344	106416	106488	106560	106632	106704	106776	106848	106920	106992	107064	107136	107208	107280	107352	107424	107496	107568	107640	107712	107784	107856	107928	108000	108072	108144	108216	108288	108360	108432	108504	108576	108648	108720	108792	108864	108936	109008	109080	109152	109224	109296	109368	109440	109512	109584	109656	109728	109800	109872	109944	110016	110088	110160	110232	110304	110376	110448	110520	110592	110664	110736	110808	110880	110952	111024	111096	111168	111240	111312	111384	111456	111528	111600	111672	111744	111816	111888	111960	112032	112104	112176	112248	112320	112392	112464	112536	112608	112680	112752	112824	112896	112968	113040	113112	113184	113256	113328	113400	113472	113544	113616	113688	113760	113832	113904	113976	114048	114120	114192	114264	114336	114408	114480	114552	114624	114696	114768	114840	114912	114984	115056	115128	115200	115272	115344	115416	115488	115560	115632	115704	115776	115848	115920	115992	116064	116136	116208	116280	116352	116424	116496	116568	116640	116712	116784	116856	116928	117000	117072	117144	117216	117288	117360	117432	117504	117576	117648	117720	117792	117864	117936	118008	118080	118152	118224	118296	118368	118440	118512	118584	118656	118728	118800	118872	118944	119016	119088	119160	119232	119304	119376	119448	119520	119592	119664	119736	119808	119880	119952	120024	120096	120168	120240	120312	120384	120456	120528	120600	120672	120744	120816	120888	120960	121032	121104	121176	121248	121320	121392	121464	121536	121608	121680	121752	121824	121896	121968	122040	122112	122184	122256	122328	122400	122472	122544	122616	122688	122760	122832	122904	122976	123048	123120	123192	123264	123336	123408	123480	123552	123624	123696	123768	123840	123912	123984	124056	124128	124200	124272	124344	124416	124488	124560	124632	124704	124776	124848	124920	124992	125064	125136	125208	125280	125352	125424	125496	125568	125640	125712	125784	125856	125928	126000	126072	126144	126216	126288	126360	126432	126504	126576	126648	126720	126792	126864	126936	127008	127080	127152	127224	127296	127368	127440	127512	127584	127656	127728	127800	127872	127944	128016	128088	128160	128232	128304	128376	128448	128520	128592	128664	128736	128808	128880	128952	129024	129096	129168	129240	129312	129384	129456	129528	129600	129672	129744	129816	129888	129960	130032	130104	130176	130248	130320	130392	130464	130536	130608	130680	130752	130824	130896	130968	131040	131112	131184	131256	131328	131400	131472	131544	131616	131688	131760	131832	131904	131976	132048	132120	132192	132264	132336	132408	132480	132552	132624	132696	132768	132840	132912	132984	133056	133128	133200	133272	133344	133416	133488	133560	133632	133704	133776	133848	133920	133992	134064	134136	134208	134280	134352	134424	134496	134568	134640	134712	134784	134856	134928	135000	135072	135144	135216	135288	135360	135432	135504	135576	135648	135720	135792	135864	135936	136008	136080	136152	136224	136296	136368	136440	136512	136584	136656	136728	136800	136872	136944	137016	137088	137160	137232	137304	137376	137448	137520	137592	137664	137736	137808	137880	137952	138024	138096	138168	138240	138312	138384	138456	138528	138600	138672	138744	138816	138888	138960	139032	139104	139176	139248	139320	139392	139464	139536	139608	139680	139752	139824	139896	139968	140040	140112	140184	140256	140328	140400	140472	140544	140616	140688	140760	140832	140904	140976	141048	141120	141192	141264	141336	141408	141480	141552	141624	141696	141768	141840	141912	141984	142056	142128	142200	142272	142344	142416	142488	142560	142632	142704	142776	142848	142920	142992	143064	143136	143208	143280	143352	143424	143496	143568	143640	143712	143784	143856	143928	144000	144072	144144	144216	144288	144360	144432	144504	144576	144648	144720	144792	144864	144936	145008	145080	145152	145224	145296	145368	145440	145512	145584	145656	145728	145800	145872	145944	146016	146088	146160	146232	146304	146376	146448	146520	146592	146664	146736	146808	146880	146952	147024	147096	147168	147240	147312	147384	147456	147528	147600	147672	147744	147816	147888	147960	148032	148104	148176	148248	148320	148392	148464	148536	148608	148680	148752	148824	148896	148968	149040	149112	149184	149256	149328	149400	149472	149544	149616	149688	149760	149832	149904	149976	150048	150120	150192	150264	150336	150408	150480	150552	150624	150696	150768	150840	150912	150984	151056	151128	151200	151272	151344	151416	151488	151560	151632	151704	151776	151848	151920	151992	152064	152136	152208	152280	152352	152424	152496	152568	152640	152712	152784	152856	152928	153000	153072	153144	153216	153288	153360	153432	153504	153576	153648	153720	153792	153864	153936	154008	154080	154152	154224	154296	154368	154440	154512	154584	154656	154728	154800	154872	154944	155016	155088	155160	155232	155304	155376	155448	155520	155592	155664	155736	155808	155880	155952	156024	156096	156168	156240	156312	156384	156456	156528	156600	156672	156744	156816	156888	156960	157032	157104	157176	157248	157320	157392	157464	157536	157608	157680	157752	157824	157896	157968	158040	158112	158184	158256	158328	158400	158472	158544	158616	158688	158760	158832	158904	158976	159048	159120	159192	159264	159336	159408	159480	159552	159624	159696	159768	159840	159912	159984	160056	160128	160200	160272	160344	160416	160488	160560	160632	160704	160776	160848	160920	160992	161064	161136	161208	161280	161352	161424	161496	161568	161640	161712	161784	161856	161928	162000	162072	162144	162216	162288	162360	162432	162504	162576	162648	162720	162792	162864	162936	163008	163080	163152	163224	163296	163368	163440	163512	163584	163656	163728	163800	163872	163944	164016	164088	164160	164232	164304	164376	164448	164520	164592	164664	164736	164808	164880	164952	165024	165096	165168	165240	165312	165384	165456	165528	165600	165672	165744	165816	165888	165960	166032	166104	166176	166248	166320	166392	166464	166536	166608	166680	166752	166824	166896	166968	167040	167112	167184	167256	167328	167400	167472	167544	167616	167688	167760	167832	167904	167976	168048	168120	168192	168264	168336	168408	168480	168552	168624	168696	168768	168840	168912	168984	169056	169128	169200	169272	169344	169416	169488	169560	169632	169704	169776	169848	169920	169992	170064	170136	170208	170280	170352	170424	170496	170568	170640	170712	170784	170856	170928	171000	171072	171144	171216	171288	171360	171432	171504	171576	171648	171720	171792	171864	171936	172008	172080	172152	172224	172296	172368	172440	172512	172584	172656	172728	172800	172872	172944	173016	173088	173160	173232	173304	173376	173448	173520	173592	173664	173736	173808	173880	173952	174024	174096	174168	174240	174312	174384	174456	174528	174600	174672	174744	174816	174888	174960	175032	175104	175176	175248	175320	175392	175464	175536	175608	175680	175752	175824	175896	175968	176040	176112	176184	176256	176328	176400	176472	176544	176616	176688	176760	176832	176904	176976	177048	177120	177192	177264	177336	177408	177480	177552	177624	177696	177768	177840	177912	177984	178056	178128	178200	178272	178344	178416	178488	178560	178632	178704	178776	178848	178920	178992	179064	179136	179208	179280	179352	179424	179496	179568	179640	179712	179784	179856	179928	180000	180072	180144	180216	180288	180360	180432	180504	180576	180648	180720	180792	180864	180936	181008	181080	181152	181224	181296	181368	181440	181512	181584	181656	181728	181800	181872	181944	182016	182088	182160	182232	182304	182376	182448	182520	182592	182664	182736	182808	182880	182952	183024	183096	183168	183240	183312	183384	183456	183528	183600	183672	183744	183816	183888	183960	184032	184104	184176	184248	184320	184392	184464	184536	184608	184680	184752	184824	184896	184968	185040	185112	185184	185256	185328	185400	185472	185544	185616	185688	185760	185832	185904	185976	186048	186120	186192	186264	186336	186408	186480	186552	186624	186696	186768	186840	186912	186984	187056	187128	187200	187272	187344	187416	187488	187560	187632	187704	187776	187848	187920	187992	188064	188136	188208	188280	188352	188424	188496	188568	188640	188712	188784	188856	188928	189000	189072	189144	189216	189288	189360	189432	189504	189576	189648	189720	189792	189864	189936	190008	190080	190152	190224	190296	190368	190440	190512	190584	190656	190728	190800	190872	190944	191016	191088	191160	191232	191304	191376	191448	191520	191592	191664	191736	191808	191880	191952	192024	192096	192168	192240	192312	192384	192456	192528	192600	192672	192744	192816	192888	192960	193032	193104	193176	193248	193320	193392	193464	193536	193608	193680	193752	193824	193896	193968	194040	194112	194184	194256	194328	194400	194472	194544	194616	194688	194760	194832	194904	194976	195048	195120	195192	195264	195336	195408	195480	195552	195624	195696	195768	195840	195912	195984	196056	196128	196200	196272	196344	196416	196488	196560	196632	196704	196776	196848	196920	196992	197064	197136	197208	197280	197352	197424	197496	197568	197640	197712	197784	197856	197928	198000	198072	198144	198216	198288	198360	198432	198504	198576	198648	198720	198792	198864	198936	199008	199080	199152	199224	199296	199368	199440	199512	199584	199656	199728	199800	199872	199944	200016	200088	200160	200232	200304	200376	200448	200520	200592	200664	200736	200808	200880	200952	201024	201096	201168	201240	201312	201384	201456	201528	201600	201672	201744	201816	201888	201960	202032	202104	202176	202248	202320	202392	202464	202536	202608	202680	202752	202824	202896	202968	203040	203112	203184	203256	203328	203400	203472	203544	203616	203688	203760	203832	203904	203976	204048	204120	204192	204264	204336	204408	204480	204552	204624	204696	204768	204840	204912	204984	205056	205128	205200	205272	205344	205416	205488	205560	205632	205704	205776	205848	205920	205992	206064	206136	206208	206280	206352	206424	206496	206568	206640	206712	206784	206856	206928	207000	207072	207144	207216	207288	207360	207432	207504	207576	207648	207720	207792	207864	207936	208008	208080	208152	208224	208296	208368	208440	208512	208584	208656	208728	208800	208872	208944	209016	209088	209160	209232	209304	209376	209448	209520	209592	209664	209736	209808	209880	209952	210024	210096	210168	210240	210312	210384	210456	210528	210600	210672	210744	210816	210888	210960	211032	211104	211176	211248	211320	211392	211464	211536	211608	211680	211752	211824	211896	211968	212040	212112	212184	212256	212328	212400	212472	212544	212616	212688	212760	212832	212904	212976	213048	213120	213192	213264	213336	213408	213480	213552	213624	213696	213768	213840	213912	213984	214056	214128	214200	214272	214344	214416	214488	214560	214632	214704	214776	214848	214920	214992	215064	215136	215208	215280	215352	215424	215496	215568	215640	215712	215784	215856	215928	216000	216072	216144	216216	216288	216360	216432	216504	216576	216648	216720	216792	216864	216936	217008	217080	217152	217224	217296	217368	217440	217512	217584	217656	217728	217800	217872	217944	218016	218088	218160	218232	218304	218376	218448	218520	218592	218664	218736	218808	218880	218952	219024	219096	219168	219240	219312	219384	219456	219528	219600	219672	219744	219816	219888	219960	220032	220104	220176	220248	220320	220392	220464	220536	220608	220680	220752	220824	220896	220968	221040	221112	221184	221256	221328	221400	221472	221544	221616	221688	221760	221832	221904	221976	222048	222120	222192	222264	222336	222408	222480	222552	222624	222696	222768	222840	222912	222984	223056	223128	223200	223272	223344	223416	223488	223560	223632	223704	223776	223848	223920	223992	224064	224136	224208	224280	224352	224424	224496	224568	224640	224712	224784	224856	224928	225000	225072	225144	225216	225288	225360	225432	225504	225576	225648	225720	225792	225864	225936	226008	226080	226152	226224	226296	226368	226440	226512	226584	226656	226728	226800	226872	226944	227016	227088	227160	227232	227304	227376	227448	227520	227592	227664	227736	227808	227880	227952	228024	228096	228168	228240	228312	228384	228456	228528	228600	228672	228744	228816	228888	228960	229032	229104	229176	229248	229320	229392	229464	229536	229608	229680	229752	229824	229896	229968	230040	230112	230184	230256	230328	230400	230472	230544	230616	230688	230760	230832	230904	230976	231048	231120	231192	231264	231336	231408	231480	231552	231624	231696	231768	231840	231912	231984	232056	232128	232200	232272	232344	232416	232488	232560	232632	232704	232776	232848	232920	232992	233064	233136	233208	233280	233352	233424	233496	233568	233640	233712	233784	233856	233928	234000	234072	234144	234216	234288	234360	234432	234504	234576	234648	234720	234792	234864	234936	235008	235080	235152	235224	235296	235368	235440	235512	235584	235656	235728	235800	235872	235944	236016	236088	236160	236232	236304	236376	236448	236520	236592	236664	236736	236808	236880	236952	237024	237096	237168	237240	237312	237384	237456	237528	237600	237672	237744	237816	237888	237960	238032	238104	238176	238248	238320	238392	238464	238536	238608	238680	238752	238824	238896	238968	239040	239112	239184	239256	239328	239400	239472	239544	239616	239688	239760	239832	239904	239976	240048	240120	240192	240264	240336	240408	240480	240552	240624	240696	240768	240840	240912	240984	241056	241128	241200	241272	241344	241416	241488	241560	241632	241704	241776	241848	241920	241992	242064	242136	242208	242280	242352	242424	242496	242568	242640	242712	242784	242856	242928	243000	243072	243144	243216	243288	243360	243432	243504	243576	243648	243720	243792	243864	243936	244008	244080	244152	244224	244296	244368	244440	244512	244584	244656	244728	244800	244872	244944	245016	245088	245160	245232	245304	245376	245448	245520	245592	245664	245736	245808	245880	245952	246024	246096	246168	246240	246312	246384	246456	246528	246600	246672	246744	246816	246888	246960	247032	247104	247176	247248	247320	247392	247464	247536	247608	247680	247752	247824	247896	247968	248040	248112	248184	248256	248328	248400	248472	248544	248616	248688	248760	248832	248904	248976	249048	249120	249192	249264	249336	249408	249480	249552	249624	249696	249768	249840	249912	249984	250056	250128	250200	250272	250344	250416	250488	250560	250632	250704	250776	250848	250920	250992	251064	251136	251208	251280	251352	251424	251496	251568	251640	251712	251784	251856	251928	252000	252072	252144	252216	252288	252360	252432	252504	252576	252648	252720	252792	252864	252936	253008	253080	253152	253224	253296	253368	253440	253512	253584	253656	253728	253800	253872	253944	254016	254088	254160	254232	254304	254376	254448	254520	254592	254664	254736	254808	254880	254952	255024	255096	255168	255240	255312	255384	255456	255528	255600	255672	255744	255816	255888	255960	256032	256104	256176	256248	256320	256392	256464	256536	256608	256680	256752	256824	256896	256968	257040	257112	257184	257256	257328	257400	257472	257544	257616	257688	257760	257832	257904	257976	258048	258120	258192	258264	258336	258408	258480	258552	258624	258696	258768	258840	258912	258984	259056	259128	259200	259272	259344	259416	259488	259560	259632	259704	259776	259848	259920	259992	260064	260136	260208	260280	260352	260424	260496	260568	260640	260712	260784	260856	260928	261000	261072	261144	261216	261288	261360	261432	261504	261576	261648	261720	261792	261864	261936	262008	262080	262152	262224	262296	262368	262440	262512	262584	262656	262728	262800	262872	262944	263016	263088	263160	263232	263304	263376	263448	263520	263592	263664	263736	263808	263880	263952	264024	264096	264168	264240	264312	264384	264456	264528	264600	264672	264744	264816	264888	264960	265032	265104	265176	265248	265320	265392	265464	265536	265608	265680	265752	265824	265896	265968	266040	266112	266184	266256	266328	266400	266472	266544	266616	266688	266760	266832	266904	266976	267048	267120	267192	267264	267336	267408	267480	267552	267624	267696	267768	267840	267912	267984	268056	268128	268200	268272	268344	268416	268488	268560	268632	268704	268776	268848	268920	268992	269064	269136	269208	269280	269352	269424	269496	269568	269640	269712	269784	269856	269928	270000	270072	270144	270216	270288	270360	270432	270504	270576	270648	270720	270792	270864	270936	271008	271080	271152	271224	271296	271368	271440	271512	271584	271656	271728	271800	271872	271944	272016	272088	272160	272232	272304	272376	272448	272520	272592	272664	272736	272808	272880	272952	273024	273096	273168	273240	273312	273384	273456	273528	273600	273672	273744	273816	273888	273960	274032	274104	274176	274248	274320	274392	274464	274536	274608	274680	274752	274824	274896	274968	275040	275112	275184	275256	275328	275400	275472	275544	275616	275688	275760	275832	275904	275976	276048	276120	276192	276264	276336	276408	276480	276552	276624	276696	276768	276840	276912	276984	277056	277128	277200	277272	277344	277416	277488	277560	277632	277704	277776	277848	277920	277992	278064	278136	278208	278280	278352	278424	278496	278568	278640	278712	278784	278856	278928	279000	279072	279144	279216	279288	279360	279432	279504	279576	279648	279720	279792	279864	279936	280008	280080	280152	280224	280296	280368	280440	280512	280584	280656	280728	280800	280872	280944	281016	281088	281160	281232	281304	281376	281448	281520	281592	281664	281736	281808	281880	281952	282024	282096	282168	282240	282312	282384	282456	282528	282600	282672	282744	282816	282888	282960	283032	283104	283176	283248	283320	283392	283464	283536	283608	283680	283752	283824	283896	283968	284040	284112	284184	284256	284328	284400	284472	284544	284616	284688	284760	284832	284904	284976	285048	285120	285192	285264	285336	285408	285480	285552	285624	285696	285768	285840	285912	285984	286056	286128	286200	286272	286344	286416	286488	286560	286632	286704	286776	286848	286920	286992	287064	287136	287208	287280	287352	287424	287496	287568	287640	287712	287784	287856	287928	288000	288072	288144	288216	288288	288360	288432	288504	288576	288648	288720	288792	288864	288936	289008	289080	289152	289224	289296	289368	289440	289512	289584	289656	289728	289800	289872	289944	290016	290088	290160	290232	290304	290376	290448	290520	290592	290664	290736	290808	290880	290952	291024	291096	291168	291240	291312	291384	291456	291528	291600	291672	291744	291816	291888	291960	292032	292104	292176	292248	292320	292392	292464	292536	292608	292680	292752	292824	292896	292968	293040	293112	293184	293256	293328	293400	293472	293544	293616	293688	293760	293832	293904	293976	294048	294120	294192	294264	294336	294408	294480	294552	294624	294696	294768	294840	294912	294984	295056	295128	295200	295272	295344	295416	295488	295560	295632	295704	295776	295848	295920	295992	296064	296136	296208	296280	296352	296424	296496	296568	296640	296712	296784	296856	296928	297000	297072	297144	297216	297288	297360	297432	297504	297576	297648	297720	297792	297864	297936	298008	298080	298152	298224	298296	298368	298440	298512	298584	298656	298728	298800	298872	298944	299016	299088	299160	299232	299304	299376	299448	299520	299592	299664	299736	299808	299880	299952	300024	300096	300168	300240	300312	300384	300456	300528	300600	300672	300744	300816	300888	300960	301032	301104	301176	301248	301320	301392	301464	301536	301608	301680	301752	301824	301896	301968	302040	302112	302184	302256	302328	302400	302472	302544	302616	302688	302760	302832	302904	302976	303048	303120	303192	303264	303336	303408	303480	303552	303624	303696	303768	303840	303912	303984	304056	304128	304200	304272	304344	304416	304488	304560	304632	304704	304776	304848	304920	304992	305064	305136	305208	305280	305352	305424	305496	305568	305640	305712	305784	305856	305928	306000	306072	306144	306216	306288	306360	306432	306504	306576	306648	306720	306792	306864	306936	307008	307080	307152	307224	307296	307368	307440	307512	307584	307656	307728	307800	307872	307944	308016	308088	308160	308232	308304	308376	308448	308520	308592	308664	308736	308808	308880	308952	309024	309096	309168	309240	309312	309384	309456	309528	309600	309672	309744	309816	309888	309960	310032	310104	310176	310248	310320	310392	310464	310536	310608	310680	310752	310824	310896	310968	311040	311112	311184	311256	311328	311400	311472	311544	311616	311688	311760	311832	311904	311976	312048	312120	312192	312264	312336	312408	312480	312552	312624	312696	312768	312840	312912	312984	313056	313128	313200	313272	313344	313416	313488	313560	313632	313704	313776	313848	313920	313992	314064	314136	314208	314280	314352	314424	314496	314568	314640	314712	314784	314856	314928	315000	315072	315144	315216	315288	315360	315432	315504	315576	315648	315720	315792	315864	315936	316008	316080	316152	316224	316296	316368	316440	316512	316584	316656	316728	316800	316872	316944	317016	317088	317160	317232	317304	317376	317448	317520	317592	317664	317736	317808	317880	317952	318024	318096	318168	318240	318312	318384	318456	318528	318600	318672	318744	318816	318888	318960	319032	319104	319176	319248	319320	319392	319464	319536	319608	319680	319752	319824	319896	319968	320040	320112	320184	320256	320328	320400	320472	320544	320616	320688	320760	320832	320904	320976	321048	321120	321192	321264	321336	321408	321480	321552	321624	321696	321768	321840	321912	321984	322056	322128	322200	322272	322344	322416	322488	322560	322632	322704	322776	322848	322920	322992	323064	323136	323208	323280	323352	323424	323496	323568	323640	323712	323784	323856	323928	324000	324072	324144	324216	324288	324360	324432	324504	324576	324648	324720	324792	324864	324936	325008	325080	325152	325224	325296	325368	325440	325512	325584	325656	325728	325800	325872	325944	326016	326088	326160	326232	326304	326376	326448	326520	326592	326664	326736	326808	326880	326952	327024	327096	327168	327240	327312	327384	327456	327528	327600	327672	327744	327816	327888	327960	328032	328104	328176	328248	328320	328392	328464	328536	328608	328680	328752	328824	328896	328968	329040	329112	329184	329256	329328	329400	329472	329544	329616	329688	329760	329832	329904	329976	330048	330120	330192	330264	330336	330408	330480	330552	330624	330696	330768	330840	330912	330984	331056	331128	331200	331272	331344	331416	331488	331560	331632	331704	331776	331848	331920	331992	332064	332136	332208	332280	332352	332424	332496	332568	332640	332712	332784	332856	332928	333000	333072	333144	333216	333288	333360	333432	333504	333576	333648	333720	333792	333864	333936	334008	334080	334152	334224	334296	334368	334440	334512	334584	334656	334728	334800	334872	334944	335016	335088	335160	335232	335304	335376	335448	335520	335592	335664	335736	335808	335880	335952	336024	336096	336168	336240	336312	336384	336456	336528	336600	336672	336744	336816	336888	336960	337032	337104	337176	337248	337320	337392	337464	337536	337608	337680	337752	337824	337896	337968	338040	338112	338184	338256	338328	338400	338472	338544	338616	338688	338760	338832	338904	338976	339048	339120	339192	339264	339336	339408	339480	339552	339624	339696	339768	339840	339912	339984	340056	340128	340200	340272	340344	340416	340488	340560	340632	340704	340776	340848	340920	340992	341064	341136	341208	341280	341352	341424	341496	341568	341640	341712	341784	341856	341928	342000	342072	342144	342216	342288	342360	342432	342504	342576	342648	342720	342792	342864	342936	343008	343080	343152	343224	343296	343368	343440	343512	343584	343656	343728	343800	343872	343944	344016	344088	344160	344232	344304	344376	344448	344520	344592	344664	344736	344808	344880	344952	345024	345096	345168	345240	345312	345384	345456	345528	345600	345672	345744	345816	345888	345960	346032	346104	346176	346248	346320	346392	346464	346536	346608	346680	346752	346824	346896	346968	347040	347112	347184	347256	347328	347400	347472	347544	347616	347688	347760	347832	347904	347976	348048	348120	348192	348264	348336	348408	348480	348552	348624	348696	348768	348840	348912	348984	349056	349128	349200	349272	349344	349416	349488	349560	349632	349704	349776	349848	349920	349992	350064	350136	350208	350280	350352	350424	350496	350568	350640	350712	350784	350856	350928	351000	351072	351144	351216	351288	351360	351432	351504	351576	351648	351720	351792	351864	351936	352008	352080	352152	352224	352296	352368	352440	352512	352584	352656	352728	352800	352872	352944	353016	353088	353160	353232	353304	353376	353448	353520	353592	353664	353736	353808	353880	353952	354024	354096	354168	354240	354312	354384	354456	354528	354600	354672	354744	354816	354888	354960	355032	355104	355176	355248	355320	355392	355464	355536	355608	355680	355752	355824	355896	355968	356040	356112	356184	356256	356328	356400	356472	356544	356616	356688	356760	356832	356904	356976	357048	357120	357192	357264	357336	357408	357480	357552	357624	357696	357768	357840	357912	357984	358056	358128	358200	358272	358344	358416	358488	358560	358632	358704	358776	358848	358920	358992	359064	359136	359208	359280	359352	359424	359496	359568	359640	359712	359784	359856	359928	360000	360072	360144	360216	360288	360360	360432	360504	360576	360648	360720	360792	360864	360936	361008	361080	361152	361224	361296	361368	361440	361512	361584	361656	361728	361800	361872	361944	362016	362088	362160	362232	362304	362376	362448	362520	362592	362664	362736	362808	362880	362952	363024	363096	363168	363240	363312	363384	363456	363528	363600	363672	363744	363816	363888	363960	364032	364104	364176	364248	364320	364392	364464	364536	364608	364680	364752	364824	364896	364968	365040	365112	365184	365256	365328	365400	365472	365544	365616	365688	365760	365832	365904	365976	366048	366120	366192	366264	366336	366408	366480	366552	366624	366696	366768	366840	366912	366984	367056	367128	367200	367272	367344	367416	367488	367560	367632	367704	367776	367848	367920	367992	368064	368136	368208	368280	368352	368424	368496	368568	368640	368712	368784	368856	368928	369000	369072	369144	369216	369288	369360	369432	369504	369576	369648	369720	369792	369864	369936	370008	370080	370152	370224	370296	370368	370440	370512	370584	370656	370728	370800	370872	370944	371016	371088	371160	371232	371304	371376	371448	371520	371592	371664	371736	371808	371880	371952	372024	372096	372168	372240	372312	372384	372456	372528	372600	372672	372744	372816	372888	372960	373032	373104	373176	373248	373320	373392	373464	373536	373608	373680	373752	373824	373896	373968	374040	374112	374184	374256	374328	374400	374472	374544	374616	374688	374760	374832	374904	374976	375048	375120	375192	375264	375336	375408	375480	375552	375624	375696	375768	375840	375912	375984	376056	376128	376200	376272	376344	376416	376488	376560	376632	376704	376776	376848	376920	376992	377064	377136	377208	377280	377352	377424	377496	377568	377640	377712	377784	377856	377928	378000	378072	378144	378216	378288	378360	378432	378504	378576	378648	378720	378792	378864	378936	379008	379080	379152	379224	379296	379368	379440	379512	379584	379656	379728	379800	379872	379944	380016	380088	380160	380232	380304	380376	380448	380520	380592	380664	380736	380808	380880	380952	381024	381096	381168	381240	381312	381384	381456	381528	381600	381672	381744	381816	381888	381960	382032	382104	382176	382248	382320	382392	382464	382536	382608	382680	382752	382824	382896	382968	383040	383112	383184	383256	383328	383400	383472	383544	383616	383688	383760	383832	383904	383976	384048	384120	384192	384264	384336	384408	384480	384552	384624	384696	384768	384840	384912	384984	385056	385128	385200	385272	385344	385416	385488	385560	385632	385704	385776	385848	385920	385992	386064	386136	386208	386280	386352	386424	386496	386568	386640	386712	386784	386856	386928	387000	387072	387144	387216	387288	387360	387432	387504	387576	387648	387720	387792	387864	387936	388008	388080	388152	388224	388296	388368	388440	388512	388584	388656	388728	388800	388872	388944	389016	389088	389160	389232	389304	389376	389448	389520	389592	389664	389736	389808	389880	389952	390024	390096	390168	390240	390312	390384	390456	390528	390600	390672	390744	390816	390888	390960	391032	391104	391176	391248	391320	391392	391464	391536	391608	391680	391752	391824	391896	391968	392040	392112	392184	392256	392328	392400	392472	392544	392616	392688	392760	392832	392904	392976	393048	393120	393192	393264	393336	393408	393480	393552	393624	393696	393768	393840	393912	393984	394056	394128	394200	394272	394344	394416	394488	394560	394632	394704	394776	394848	394920	394992	395064	395136	395208	395280	395352	395424	395496	395568	395640	395712	395784	395856	395928	396000	396072	396144	396216	396288	396360	396432	396504	396576	396648	396720	396792	396864	396936	397008	397080	397152	397224	397296	397368	397440	397512	397584	397656	397728	397800	397872	397944	398016	398088	398160	398232	398304	398376	398448	398520	398592	398664	398736	398808	398880	398952	399024	399096	399168	399240	399312	399384	399456	399528	399600	399672	399744	399816	399888	399960	400032	400104	400176	400248	400320	400392	400464	400536	400608	400680	400752	400824	400896	400968	401040	401112	401184	401256	401328	401400	401472	401544	401616	401688	401760	401832	401904	401976	402048	402120	402192	402264	402336	402408	402480	402552	402624	402696	402768	402840	402912	402984	403056	403128	403200	403272	403344	403416	403488	403560	403632	403704	403776	403848	403920	403992	404064	404136	404208	404280	404352	404424	404496	404568	404640	404712	404784	404856	404928	405000	405072	405144	405216	405288	405360	405432	405504	405576	405648	405720	405792	405864	405936	406008	406080	406152	406224	406296	406368	406440	406512	406584	406656	406728	406800	406872	406944	407016	407088	407160	407232	407304	407376	407448	407520	407592	407664	407736	407808	407880	407952	408024	408096	408168	408240	408312	408384	408456	408528	408600	408672	408744	408816	408888	408960	409032	409104	409176	409248	409320	409392	409464	409536	409608	409680	409752	409824	409896	409968	410040	410112	410184	410256	410328	410400	410472	410544	410616	410688	410760	410832	410904	410976	411048	411120	411192	411264	411336	411408	411480	411552	411624	411696	411768	411840	411912	411984	412056	412128	412200	412272	412344	412416	412488	412560	412632	412704	412776	412848	412920	412992	413064	413136	413208	413280	413352	413424	413496	413568	413640	413712	413784	413856	413928	414000	414072	414144	414216	414288	414360	414432	414504	414576	414648	414720	414792	414864	414936	415008	415080	415152	415224	415296	415368	415440	415512	415584	415656	415728	415800	415872	415944	416016	416088	416160	416232	416304	416376	416448	416520	416592	416664	416736	416808	416880	416952	417024	417096	417168	417240	417312	417384	417456	417528	417600	417672	417744	417816	417888	417960	418032	418104	418176	418248	418320	418392	418464	418536	418608	418680	418752	418824	418896	418968	419040	419112	419184	419256	419328	419400	419472	419544	419616	419688	419760	419832	419904	419976	420048	420120	420192	420264	420336	420408	420480	420552	420624	420696	420768	420840	420912	420984	421056	421128	421200	421272	421344	421416	421488	421560	421632	421704	421776	421848	421920	421992	422064	422136	422208	422280	422352	422424	422496	422568	422640	422712	422784	422856	422928	423000	423072	423144	423216	423288	423360	423432	423504	423576	423648	423720	423792	423864	423936	424008	424080	424152	424224	424296	424368	424440	424512	424584	424656	424728	424800	424872	424944	425016	425088	425160	425232	425304	425376	425448	425520	425592	425664	425736	425808	425880	425952	426024	426096	426168	426240	426312	426384	426456	426528	426600	426672	426744	426816	426888	426960	427032	427104	427176	427248	427320	427392	427464	427536	427608	427680	427752	427824	427896	427968	428040	428112	428184	428256	428328	428400	428472	428544	428616	428688	428760	428832	428904	428976	429048	429120	429192	429264	429336	429408	429480	429552	429624	429696	429768	429840	429912	429984	430056	430128	430200	430272	430344	430416	430488	430560	430632	430704	430776	430848	430920	430992	431064	431136	431208	431280	431352	431424	431496	431568	431640	431712	431784	431856	431928	432000	432072	432144	432216	432288	432360	432432	432504	432576	432648	432720	432792	432864	432936	433008	433080	433152	433224	433296	433368	433440	433512	433584	433656	433728	433800	433872	433944	434016	434088	434160	434232	434304	434376	434448	434520	434592	434664	434736	434808	434880	434952	435024	435096	435168	435240	435312	435384	435456	435528	435600	435672	435744	435816	435888	435960	436032	436104	436176	436248	436320	436392	436464	436536	436608	436680	436752	436824	436896	436968	437040	437112	437184	437256	437328	437400	437472	437544	437616	437688	437760	437832	437904	437976	438048	438120	438192	438264	438336	438408	438480	438552	438624	438696	438768	438840	438912	438984	439056	439128	439200	439272	439344	439416	439488	439560	439632	439704	439776	439848	439920	439992	440064	440136	440208	440280	440352	440424	440496	440568	440640	440712	440784	440856	440928	441000	441072	441144	441216	441288	441360	441432	441504	441576	441648	441720	441792	441864	441936	442008	442080	442152	442224	442296	442368	442440	442512	442584	442656	442728	442800	442872	442944	443016	443088	443160	443232	443304	443376	443448	443520	443592	443664	443736	443808	443880	443952	444024	444096	444168	444240	444312	444384	444456	444528	444600	444672	444744	444816	444888	444960	445032	445104	445176	445248	445320	445392	445464	445536	445608	445680	445752	445824	445896	445968	446040	446112	446184	446256	446328	446400	446472	446544	446616	446688	446760	446832	446904	446976	447048	447120	447192	447264	447336	447408	447480	447552	447624	447696	447768	447840	447912	447984	448056	448128	448200	448272	448344	448416	448488	448560	448632	448704	448776	448848	448920	448992	449064	449136	449208	449280	449352	449424	449496	449568	449640	449712	449784	449856	449928	450000	450072	450144	450216	450288	450360	450432	450504	450576	450648	450720	450792	450864	450936	451008	451080	451152	451224	451296	451368	451440	451512	451584	451656	451728	451800	451872	451944	452016	452088	452160	452232	452304	452376	452448	452520	452592	452664	452736	452808	452880	452952	453024	453096	453168	453240	453312	453384	453456	453528	453600	453672	453744	453816	453888	453960	454032	454104	454176	454248	454320	454392	454464	454536	454608	454680	454752	454824	454896	454968	455040	455112	455184	455256	455328	455400	455472	455544	455616	455688	455760	455832	455904	455976	456048	456120	456192	456264	456336	456408	456480	456552	456624	456696	456768	456840	456912	456984	457056	457128	457200	457272	457344	457416	457488	457560	457632	457704	457776	457848	457920	457992	458064	458136	458208	458280	458352	458424	458496	458568	458640	458712	458784	458856	458928	459000	459072	459144	459216	459288	459360	459432	459504	459576	459648	459720	459792	459864	459936	460008	460080	460152	460224	460296	460368	460440	460512	460584	460656	460728	460800	460872	460944	461016	461088	461160	461232	461304	461376	461448	461520	461592	461664	461736	461808	461880	461952	462024	462096	462168	462240	462312	462384	462456	462528	462600	462672	462744	462816	462888	462960	463032	463104	463176	463248	463320	463392	463464	463536	463608	463680	463752	463824	463896	463968	464040	464112	464184	464256	464328	464400	464472	464544	464616	464688	464760	464832	464904	464976	465048	465120	465192	465264	465336	465408	465480	465552	465624	465696	465768	465840	465912	465984	466056	466128	466200	466272	466344	466416	466488	466560	466632	466704	466776	466848	466920	466992	467064	467136	467208	467280	467352	467424	467496	467568	467640	467712	467784	467856	467928	468000	468072	468144	468216	468288	468360	468432	468504	468576	468648	468720	468792	468864	468936	469008	469080	469152	469224	469296	469368	469440	469512	469584	469656	469728	469800	469872	469944	470016	470088	470160	470232	470304	470376	470448	470520	470592	470664	470736	470808	470880	470952	471024	471096	471168	471240	471312	471384	471456	471528	471600	471672	471744	471816	471888	471960	472032	472104	472176	472248	472320	472392	472464	472536	472608	472680	472752	472824	472896	472968	473040	473112	473184	473256	473328	473400	473472	473544	473616	473688	473760	473832	473904	473976	474048	474120	474192	474264	474336	474408	474480	474552	474624	474696	474768	474840	474912	474984	475056	475128	475200	475272	475344	475416	475488	475560	475632	475704	475776	475848	475920	475992	476064	476136	476208	476280	476352	476424	476496	476568	476640	476712	476784	476856	476928	477000	477072	477144	477216	477288	477360	477432	477504	477576	477648	477720	477792	477864	477936	478008	478080	478152	478224	478296	478368	478440	478512	478584	478656	478728	478800	478872	478944	479016	479088	479160	479232	479304	479376	479448	479520	479592	479664	479736	479808	479880	479952	480024	480096	480168	480240	480312	480384	480456	480528	480600	480672	480744	480816	480888	480960	481032	481104	481176	481248	481320	481392	481464	481536	481608	481680	481752	481824	481896	481968	482040	482112	482184	482256	482328	482400	482472	482544	482616	482688	482760	482832	482904	482976	483048	483120	483192	483264	483336	483408	483480	483552	483624	483696	483768	483840	483912	483984	484056	484128	484200	484272	484344	484416	484488	484560	484632	484704	484776	484848	484920	484992	485064	485136	485208	485280	485352	485424	485496	485568	485640	485712	485784	485856	485928	486000	486072	486144	486216	486288	486360	486432	486504	486576	486648	486720	486792	486864	486936	487008	487080	487152	487224	487296	487368	487440	487512	487584	487656	487728	487800	487872	487944	488016	488088	488160	488232	488304	488376	488448	488520	488592	488664	488736	488808	488880	488952	489024	489096	489168	489240	489312	489384	489456	489528	489600	489672	489744	489816	489888	489960	490032	490104	490176	490248	490320	490392	490464	490536	490608	490680	490752	490824	490896	490968	491040	491112	491184	491256	491328	491400	491472	491544	491616	491688	491760	491832	491904	491976	492048	492120	492192	492264	492336	492408	492480	492552	492624	492696	492768	492840	492912	492984	493056	493128	493200	493272	493344	493416	493488	493560	493632	493704	493776	493848	493920	493992	494064	494136	494208	494280	494352	494424	494496	494568	494640	494712	494784	494856	494928	495000	495072	495144	495216	495288	495360	495432	495504	495576	495648	495720	495792	495864	495936	496008	496080	496152	496224	496296	496368	496440	496512	496584	496656	496728	496800	496872	496944	497016	497088	497160	497232	497304	497376	497448	497520	497592	497664	497736	497808	497880	497952	498024	498096	498168	498240	498312	498384	498456	498528	498600	498672	498744	498816	498888	498960	499032	499104	499176	499248	499320	499392	499464	499536	499608	499680	499752	499824	499896	499968	500040	500112	500184	500256	500328	500400	500472	500544	500616	500688	500760	500832	500904	500976	501048	501120	501192	501264	501336	501408	501480	501552	501624	501696	501768	501840	501912	501984	502056	502128	502200	502272	502344	502416	502488	502560	502632	502704	502776	502848	502920	502992	503064	503136	503208	503280	503352	503424	503496	503568	503640	503712	503784	503856	503928	504000	504072	504144	504216	504288	504360	504432	504504	504576	504648	504720	504792	504864	504936	505008	505080	505152	505224	505296	505368	505440	505512	505584	505656	505728	505800	505872	505944	506016	506088	506160	506232	506304	506376	506448	506520	506592	506664	506736	506808	506880	506952	507024	507096	507168	507240	507312	507384	507456	507528	507600	507672	507744	507816	507888	507960	508032	508104	508176	508248	508320	508392	508464	508536	508608	508680	508752	508824	508896	508968	509040	509112	509184	509256	509328	509400	509472	509544	509616	509688	509760	509832	509904	509976	510048	510120	510192	510264	510336	510408	510480	510552	510624	510696	510768	510840	510912	510984	511056	511128	511200	511272	511344	511416	511488	511560	511632	511704	511776	511848	511920	511992	512064	512136	512208	512280	512352	512424	512496	512568	512640	512712	512784	512856	512928	513000	513072	513144	513216	513288	513360	513432	513504	513576	513648	513720	513792	513864	513936	514008	514080	514152	514224	514296	514368	514440	514512	514584	514656	514728	514800	514872	514944	515016	515088	515160	515232	515304	515376	515448	515520	515592	515664	515736	515808	515880	515952	516024	516096	516168	516240	516312	516384	516456	516528	516600	516672	516744	516816	516888	516960	517032	517104	517176	517248	517320	517392	517464	517536	517608	517680	517752	517824	517896	517968	518040	518112	518184	518256	518328	518400	518472	518544	518616	518688	518760	518832	518904	518976	519048	519120	519192	519264	519336	519408	519480	519552	519624	519696	519768	519840	519912	519984	520056	520128	520200	520272	520344	520416	520488	520560	520632	520704	520776	520848	520920	520992	521064	521136	521208	521280	521352	521424	521496	521568	521640	521712	521784	521856	521928	522000	522072	522144	522216	522288	522360	522432	522504	522576	522648	522720	522792	522864	522936	523008	523080	523152	523224	523296	523368	523440	523512	523584	523656	523728	523800	523872	523944	524016	524088	524160	524232	524304	524376	524448	524520	524592	524664	524736	524808	524880	524952	525024	525096	525168	525240	525312	525384	525456	525528	525600	525672	525744	525816	525888	525960	526032	526104	526176	526248	526320	526392	526464	526536	526608	526680	526752	526824	526896	526968	527040	527112	527184	527256	527328	527400	527472	527544	527616	527688	527760	527832	527904	527976	528048	528120	528192	528264	528336	528408	528480	528552	528624	528696	528768	528840	528912	528984	529056	529128	529200	529272	529344	529416	529488	529560	529632	529704	529776	529848	529920	529992	530064	530136	530208	530280	530352	530424	530496	530568	530640	530712	530784	530856	530928	531000	531072	531144	531216	531288	531360	531432	531504	531576	531648	531720	531792	531864	531936	532008	532080	532152	532224	532296	532368	532440	532512	532584	532656	532728	532800	532872	532944	533016	533088	533160	533232	533304	533376	533448	533520	533592	533664	533736	533808	533880	533952	534024	534096	534168	534240	534312	534384	534456	534528	534600	534672	534744	534816	534888	534960	535032	535104	535176	535248	535320	535392	535464	535536	535608	535680	535752	535824	535896	535968	536040	536112	536184	536256	536328	536400	536472	536544	536616	536688	536760	536832	536904	536976	537048	537120	537192	537264	537336	537408	537480	537552	537624	537696	537768	537840	537912	537984	538056	538128	538200	538272	538344	538416	538488	538560	538632	538704	538776	538848	538920	538992	539064	539136	539208	539280	539352	539424	539496	539568	539640	539712	539784	539856	539928	540000	540072	540144	540216	540288	540360	540432	540504	540576	540648	540720	540792	540864	540936	541008	541080	541152	541224	541296	541368	541440	541512	541584	541656	541728	541800	541872	541944	542016	542088	542160	542232	542304	542376	542448	542520	542592	542664	542736	542808	542880	542952	543024	543096	543168	543240	543312	543384	543456	543528	543600	543672	543744	543816	543888	543960	544032	544104	544176	544248	544320	544392	544464	544536	544608	544680	544752	544824	544896	544968	545040	545112	545184	545256	545328	545400	545472	545544	545616	545688	545760	545832	545904	545976	546048	546120	546192	546264	546336	546408	546480	546552	546624	546696	546768	546840	546912	546984	547056	547128	547200	547272	547344	547416	547488	547560	547632	547704	547776	547848	547920	547992	548064	548136	548208	548280	548352	548424	548496	548568	548640	548712	548784	548856	548928	549000	549072	549144	549216	549288	549360	549432	549504	549576	549648	549720	549792	549864	549936	550008	550080	550152	550224	550296	550368	550440	550512	550584	550656	550728	550800	550872	550944	551016	551088	551160	551232	551304	551376	551448	551520	551592	551664	551736	551808	551880	551952	552024	552096	552168	552240	552312	552384	552456	552528	552600	552672	552744	552816	552888	552960	553032	553104	553176	553248	553320	553392	553464	553536	553608	553680	553752	553824	553896	553968	554040	554112	554184	554256	554328	554400	554472	554544	554616	554688	554760	554832	554904	554976	555048	555120	555192	555264	555336	555408	555480	555552	555624	555696	555768	555840	555912	555984	556056	556128	556200	556272	556344	556416	556488	556560	556632	556704	556776	556848	556920	556992	557064	557136	557208	557280	557352	557424	557496	557568	557640	557712	557784	557856	557928	558000	558072	558144	558216	558288	558360	558432	558504	558576	558648	558720	558792	558864	558936	559008	559080	559152	559224	559296	559368	559440	559512	559584	559656	559728	559800	559872	559944	560016	560088	560160	560232	560304	560376	560448	560520	560592	560664	560736	560808	560880	560952	561024	561096	561168	561240	561312	561384	561456	561528	561600	561672	561744	561816	561888	561960	562032	562104	562176	562248	562320	562392	562464	562536	562608	562680	562752	562824	562896	562968	563040	563112	563184	563256	563328	563400	563472	563544	563616	563688	563760	563832	563904	563976	564048	564120	564192	564264	564336	564408	564480	564552	564624	564696	564768	564840	564912	564984	565056	565128	565200	565272	565344	565416	565488	565560	565632	565704	565776	565848	565920	565992	566064	566136	566208	566280	566352	566424	566496	566568	566640	566712	566784	566856	566928	567000	567072	567144	567216	567288	567360	567432	567504	567576	567648	567720	567792	567864	567936	568008	568080	568152	568224	568296	568368	568440	568512	568584	568656	568728	568800	568872	568944	569016	569088	569160	569232	569304	569376	569448	569520	569592	569664	569736	569808	569880	569952	570024	570096	570168	570240	570312	570384	570456	570528	570600	570672	570744	570816	570888	570960	571032	571104	571176	571248	571320	571392	571464	571536	571608	571680	571752	571824	571896	571968	572040	572112	572184	572256	572328	572400	572472	572544	572616	572688	572760	572832	572904	572976	573048	573120	573192	573264	573336	573408	573480	573552	573624	573696	573768	573840	573912	573984	574056	574128	574200	574272	574344	574416	574488	574560	574632	574704	574776	574848	574920	574992	575064	575136	575208	575280	575352	575424	575496	575568	575640	575712	575784	575856	575928	576000	576072	576144	576216	576288	576360	576432	576504	576576	576648	576720	576792	576864	576936	577008	577080	577152	577224	577296	577368	577440	577512	577584	577656	577728	577800	577872	577944	578016	578088	578160	578232	578304	578376	578448	578520	578592	578664	578736	578808	578880	578952	579024	579096	579168	579240	579312	579384	579456	579528	579600	579672	579744	579816	579888	579960	580032	580104	580176	580248	580320	580392	580464	580536	580608	580680	580752	580824	580896	580968	581040	581112	581184	581256	581328	581400	581472	581544	581616	581688	581760	581832	581904	581976	582048	582120	582192	582264	582336	582408	582480	582552	582624	582696	582768	582840	582912	582984	583056	583128	583200	583272	583344	583416	583488	583560	583632	583704	583776	583848	583920	583992	584064	584136	584208	584280	584352	584424	584496	584568	584640	584712	584784	584856	584928	585000	585072	585144	585216	585288	585360	585432	585504	585576	585648	585720	585792	585864	585936	586008	586080	586152	586224	586296	586368	586440	586512	586584	586656	586728	586800	586872	586944	587016	587088	587160	587232	587304	587376	587448	587520	587592	587664	587736	587808	587880	587952	588024	588096	588168	588240	588312	588384	588456	588528	588600	588672	588744	588816	588888	588960	589032	589104	589176	589248	589320	589392	589464	589536	589608	589680	589752	589824	589896	589968	590040	590112	590184	590256	590328	590400	590472	590544	590616	590688	590760	590832	590904	590976	591048	591120	591192	591264	591336	591408	591480	591552	591624	591696	591768	591840	591912	591984	592056	592128	592200	592272	592344	592416	592488	592560	592632	592704	592776	592848	592920	592992	593064	593136	593208	593280	593352	593424	593496	593568	593640	593712	593784	593856	593928	594000	594072	594144	594216	594288	594360	594432	594504	594576	594648	594720	594792	594864	594936	595008	595080	595152	595224	595296	595368	595440	595512	595584	595656	595728	595800	595872	595944	596016	596088	596160	596232	596304	596376	596448	596520	596592	596664	596736	596808	596880	596952	597024	597096	597168	597240	597312	597384	597456	597528	597600	597672	597744	597816	597888	597960	598032	598104	598176	598248	598320	598392	598464	598536	598608	598680	598752	598824	598896	598968	599040	599112	599184	599256	599328	599400	599472	599544	599616	599688	599760	599832	599904	599976	600048	600120	600192	600264	600336	600408	600480	600552	600624	600696	600768	600840	600912	600984	601056	601128	601200	601272	601344	601416	601488	601560	601632	601704	601776	601848	601920	601992	602064	602136	602208	602280	602352	602424	602496	602568	602640	602712	602784	602856	602928	603000	603072	603144	603216	603288	603360	603432	603504	603576	603648	603720	603792	603864	603936	604008	604080	604152	604224	604296	604368	604440	604512	604584	604656	604728	604800	604872	604944	605016	605088	605160	605232	605304	605376	605448	605520	605592	605664	605736	605808	605880	605952	606024	606096	606168	606240	606312	606384	606456	606528	606600	606672	606744	606816	606888	606960	607032	607104	607176	607248	607320	607392	607464	607536	607608	607680	607752	607824	607896	607968	608040	608112	608184	608256	608328	608400	608472	608544	608616	608688	608760	608832	608904	608976	609048	609120	609192	609264	609336	609408	609480	609552	609624	609696	609768	609840	609912	609984	610056	610128	610200	610272	610344	610416	610488	610560	610632	610704	610776	610848	610920	610992	611064	611136	611208	611280	611352	611424	611496	611568	611640	611712	611784	611856	611928	612000	612072	612144	612216	612288	612360	612432	612504	612576	612648	612720	612792	612864	612936	613008	613080	613152	613224	613296	613368	613440	613512	613584	613656	613728	613800	613872	613944	614016	614088	614160	614232	614304	614376	614448	614520	614592	614664	614736	614808	614880	614952	615024	615096	615168	615240	615312	615384	615456	615528	615600	615672	615744	615816	615888	615960	616032	616104	616176	616248	616320	616392	616464	616536	616608	616680	616752	616824	616896	616968	617040	617112	617184	617256	617328	617400	617472	617544	617616	617688	617760	617832	617904	617976	618048	618120	618192	618264	618336	618408	618480	618552	618624	618696	618768	618840	618912	618984	619056	619128	619200	619272	619344	619416	619488	619560	619632	619704	619776	619848	619920	619992	620064	620136	620208	620280	620352	620424	620496	620568	620640	620712	620784	620856	620928	621000	621072	621144	621216	621288	621360	621432	621504	621576	621648	621720	621792	621864	621936	622008	622080	622152	622224	622296	622368	622440	622512	622584	622656	622728	622800	622872	622944	623016	623088	623160	623232	623304	623376	623448	623520	623592	623664	623736	623808	623880	623952	624024	624096	624168	624240	624312	624384	624456	624528	624600	624672	624744	624816	624888	624960	625032	625104	625176	625248	625320	625392	625464	625536	625608	625680	625752	625824	625896	625968	626040	626112	626184	626256	626328	626400	626472	626544	626616	626688	626760	626832	626904	626976	627048	627120	627192	627264	627336	627408	627480	627552	627624	627696	627768	627840	627912	627984	628056	628128	628200	628272	628344	628416	628488	628560	628632	628704	628776	628848	628920	628992	629064	629136	629208	629280	629352	629424	629496	629568	629640	629712	629784	629856	629928	630000	630072	630144	630216	630288	630360	630432	630504	630576	630648	630720	630792	630864	630936	631008	631080	631152	631224	631296	631368	631440	631512	631584	631656	631728	631800	631872	631944	632016	632088	632160	632232	632304	632376	632448	632520	632592	632664	632736	632808	632880	632952	633024	633096	633168	633240	633312	633384	633456	633528	633600	633672	633744	633816	633888	633960	634032	634104	634176	634248	634320	634392	634464	634536	634608	634680	634752	634824	634896	634968	635040	635112	635184	635256	635328	635400	635472	635544	635616	635688	635760	635832	635904	635976	636048	636120	636192	636264	636336	636408	636480	636552	636624	636696	636768	636840	636912	636984	637056	637128	637200	637272	637344	637416	637488	637560	637632	637704	637776	637848	637920	637992	638064	638136	638208	638280	638352	638424	638496	638568	638640	638712	638784	638856	638928	639000	639072	639144	639216	639288	639360	639432	639504	639576	639648	639720	639792	639864	639936	640008	640080	640152	640224	640296	640368	640440	640512	640584	640656	640728	640800	640872	640944	641016	641088	641160	641232	641304	641376	641448	641520	641592	641664	641736	641808	641880	641952	642024	642096	642168	642240	642312	642384	642456	642528	642600	642672	642744	642816	642888	642960	643032	643104	643176	643248	643320	643392	643464	643536	643608	643680	643752	643824	643896	643968	644040	644112	644184	644256	644328	644400	644472	644544	644616	644688	644760	644832	644904	644976	645048	645120	645192	645264	645336	645408	645480	645552	645624	645696	645768	645840	645912	645984	646056	646128	646200	646272	646344	646416	646488	646560	646632	646704	646776	646848	646920	646992	647064	647136	647208	647280	647352	647424	647496	647568	647640	647712	647784	647856	647928	648000	648072	648144	648216	648288	648360	648432	648504	648576	648648	648720	648792	648864	648936	649008	649080	649152	649224	649296	649368	649440	649512	649584	649656	649728	649800	649872	649944	650016];

xarray(1) = ancho(1);
xarray(2) = ancho(length(ancho));
xarray(3) = ancho(length(ancho));
xarray(4) = ancho(1);
xarray(5) = ancho(1);
o = 0;
for i=1:length(ancho)
    if(mod(i,2))
        %impar
        o = o + 1;
        yarray(o) = largo(1);
        o = o + 1;
        yarray(o) = largo(1);
    else
        %par
        o = o + 1;
        yarray(o) = largo(length(largo));
        o = o + 1;
        yarray(o) = largo(length(largo));
    end
end
indiceLargo = length(largo);
for i=1:length(largo)
    o = o + 1;
    yarray(o) = largo(indiceLargo);
    o = o + 1;
    yarray(o) = largo(indiceLargo);
    indiceLargo = indiceLargo - 1;
end
o = o + 1;
yarray(o) = 0;

z = 5;
for i=2:length(ancho)
        z = z + 1;
        xarray(z) =  ancho(i);
        z = z + 1;
        xarray(z) = ancho(i);
end

for i=1:length(largo)
    if(i==length(largo))
    else
        if(mod(i,2))
        %impar
        z = z + 1;
        xarray(z) = ancho(1);
        z = z + 1;
        xarray(z) = ancho(1);
        else
        %par
        z = z + 1;
        xarray(z) = ancho(length(ancho));
        z = z + 1;
        xarray(z) = ancho(length(ancho));
        end
    end
    
end
xlabel('Tiempo(muestras)');ylabel('Amplitud(mV)');
hold on,plot(ecgs); title(strcat('Registro', 32,  registromit));
hold on,plot(S_index,ecgs(S_index),'r+');  %Grafica picos R sobre la curva ECG acondicionada
hold on,plot(Rindex2,ecgs(Rindex2),'go');
hold on, plot(Q_index, ecgs(Q_index),'r*');
%hold on,plot(K_index,ecgs(K_index),'b+');  %K_amp_ECG
hold on,plot(Pindex,ecgs(Pindex),'ko');
hold on,plot(P_ON_index,ecgs(P_ON_index),'ro');
hold on, plot(xarray,yarray, 'Linewidth', 1);
%hold on,plot(Tindex,ecgs(Tindex),'m^');
%hold on,plot(anotacionesP.('Sample'),ecg(anotacionesP.('Sample')),'cx');
%legend('ECG','Punto S','Punto R','Punto Q','Punto K','Onda P', 'Onda T', 'Anotaciones T')
%legend('ECG','Punto S','Punto R','Punto Q','Punto K','Onda P', 'Onda T');
legend('ECG','Punto S','Punto R','Punto Q','Onda P', 'P onset', 'Cuadrados ECG');
handles.ecgArritmias.XRuler.Exponent = 0;

ecgPlot = datacursormode(handles.figure1);
R_amp= ecgs(Rindex2);
P_amp= ecgs(Pindex);
set(ecgPlot ,'UpdateFcn', {@myupdatefcn, handles.edit_x_Arritmias, handles.edit_y_Arritmias, 0});
Rindex2 = Rindex2(:);
assignin('base','Rindex',Rindex2);
assignin('base','Pindex',Pindex);
assignin('base','Tindex',Tindex);
assignin('base','RindexAmp', R_amp);
assignin('base','PindexAmp', P_amp);

for i = 1 : length(Pindex)
    AusenciaP(i, 1) = abs(P_amp(i)/R_amp(i));
    AusenciaP(i, 2) = Pindex(i);
end
indmayor = 1;
for i = 1 : length(Pindex)
    if(AusenciaP(i) < 0.01)
        mayor{indmayor, 1} = AusenciaP(i, 1);
        mayor{indmayor, 2} = AusenciaP(i, 2);
        indmayor = indmayor + 1;
    end
end


assignin('base','mayor', mayor);
assignin('base','ausenciaP', AusenciaP);
assignin('base','Q_index', Q_index);
assignin('base','PicoR', PicoR);
assignin('base','NSyR',NSyR);
assignin('base','SyBr',SyBr);
assignin('base','SyTa',SyTa);
assignin('base','SyAr',SyAr);
assignin('base','AtFl',AtFl);
assignin('base','AtFib',AtFib);
assignin('base','VTa',VTa);
assignin('base','VFl',VFl);
assignin('base','B1Gr',B1Gr);
assignin('base','OtraArritmia', OtraArritmia);

set(handles.tablaRSN,'ColumnName',columnasArritmias);
set(handles.tablaBS,'ColumnName',columnasArritmias);
set(handles.tablaAA,'ColumnName',columnasArritmias);
set(handles.tablaFA,'ColumnName',columnasArritmias);
set(handles.tablaTV,'ColumnName',columnasArritmias);
set(handles.tablaFV,'ColumnName',columnasArritmias);
set(handles.tablaOA,'ColumnName',columnasArritmias);
arritmiasAlgoritmo = [];
arregloAnalizarNSyR = [];
picosNSyR = [];
VPNSyR = [];
FPNSyR = [];
FNNSyR = []; 
SensiNSyR = [];
PredpNSyR = []; 
VParregloNSyR = []; 
FParregloNSyR = [] 
FNarregloNSyR = [];
matrizNSyR = [];
VPSyBr = [];
FPSyBr = [];
FNSyBr = []; 
SensiSyBr = [];
PredpSyBr = []; 
VParregloNSyR = [];
FParregloNSyR = [];
FNarregloNSyR = [];
VParregloSyBr = [];
FParregloSyBr = [];
FNarregloSyBr = [];
VParregloAtFl = [];
FParregloAtFl = [];
FNarregloAtFl = [];
VParregloAtFib = [];
FParregloAtFib = [];
FNarregloAtFib = [];
VParregloVTa = [];
FParregloVTa = [];
FNarregloVTa = [];
VParregloVFl = [];
FParregloVFl = [];
FNarregloVFl = [];
VParregloOtraArritmia = [];
FParregloOtraArritmia = [];
FNarregloOtraArritmia = [];

arregloAnalizarNSyR = [];
arregloAnalizarAtFib = [];
arregloAnalizarVFl = [];
arregloAnalizarVTa = [];
arregloAnalizarSyBr = [];
arregloAnalizarAtFl = [];
arregloAnalizarOtraArritmia = [];

%set(handles.tablaAnotaciones,'data',[])

set(handles.tablaRSN,'data',[]);
set(handles.tablaBS,'data', []);
set(handles.tablaAA,'data', []);
set(handles.tablaFA,'data', []);
set(handles.tablaTV,'data', []);
set(handles.tablaFV,'data', []);
set(handles.tablaOA,'data', []);

[conexionBD] = conexion(dbname, username, password, driver, dburl);
querieAnotacion1 = ["SELECT * FROM mitarrythmiadatabase.anotaciones" registromit ";"];
assignin('base','querieAnotacion1', strjoin(querieAnotacion1, ''));
anotaciones2 = select(conexionBD, strjoin(querieAnotacion1, ''));
assignin('base','anotaciones2', anotaciones2);
arregloAnalizarNSyR = [];
arregloAnalizarAtFib = [];
arregloAnalizarVFl = [];
arregloAnalizarVTa = [];
arregloAnalizarSyBr = [];
arregloAnalizarAtFl = [];
arregloAnalizarOtraArritmia = [];
arregloAux = unique(anotaciones(:,2));
contAtFib = 1;
contNSyR = 1;
contVFl = 1;
contVTa = 1;
contSyBr = 1;
contAtFl = 1;
contOtraArritmia = 1;

    for y=1:size(anotaciones,1)
        if(isequal(anotaciones{y,2}, {'(N'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarNSyR{contNSyR} = anotaciones2{z,2};
                contNSyR = contNSyR + 1;
            end
        elseif(isequal(anotaciones{y,2}, {'(AFIB'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarAtFib{contAtFib} = anotaciones2{z,2};
                contAtFib = contAtFib + 1;
            end   
        elseif(isequal(anotaciones{y,2}, {'(VFL'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarVFl{contVFl} = anotaciones2{z,2};
                contVFl = contVFl + 1;
                
            end
        elseif(isequal(anotaciones{y,2}, {'(VT'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarVTa{contVTa} = anotaciones2{z,2};
                contVTa = contVTa + 1;
            end   
        elseif(isequal(anotaciones{y,2}, {'(SBR'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarSyBr{contSyBr} = anotaciones2{z,2};
                contSyBr = contSyBr + 1;
            end
        elseif(isequal(anotaciones{y,2}, {'(AFL'}))
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarAtFl{contAtFl} = anotaciones2{z,2};
                contAtFl = contAtFl + 1;
            end
        else
            for z=anotaciones{y,11}:anotaciones{y,12}
                arregloAnalizarOtraArritmia{contOtraArritmia} = anotaciones2{z,2};
                contOtraArritmia = contOtraArritmia + 1;
            end     
        end
    end

arregloAnalizarNSyR = arregloAnalizarNSyR(:);
arregloAnalizarAtFib = arregloAnalizarAtFib(:);
arregloAnalizarVFl = arregloAnalizarVFl(:);
arregloAnalizarVTa = arregloAnalizarVTa(:);
arregloAnalizarSyBr = arregloAnalizarSyBr(:);
arregloAnalizarAtFl = arregloAnalizarAtFl(:);
arregloAnalizarOtraArritmia = arregloAnalizarOtraArritmia(:);


if(~isempty(NSyR))
    [matrizNSyR, VPNSyR, FPNSyR, FNNSyR, SensiNSyR, PredpNSyR, VParregloNSyR, FParregloNSyR, FNarregloNSyR]=sensiPredAlgoritmos(NSyR(:,2), NSyR(:,3), NSyR(:,4), NSyR(:,5), NSyR(:,6), NSyR(:,7), cell2mat(arregloAnalizarNSyR), '(N');
    set(handles.tablaRSN, 'data', VParregloNSyR);
    if(~isempty(SensiNSyR) && ~isnan(SensiNSyR))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Ritmo Sinusal Normal" SensiNSyR PredpNSyR size(arregloAnalizarNSyR,1) VPNSyR FPNSyR FNNSyR (FPNSyR + FNNSyR) ((FPNSyR + FNNSyR) * 100/size(arregloAnalizarNSyR,1))];
    end
end
if(~isempty(SyBr))
    [matrizSyBr, VPSyBr, FPSyBr, FNSyBr, SensiSyBr, PredpSyBr, VParregloSyBr, FParregloSyBr, FNarregloSyBr]=sensiPredAlgoritmos(SyBr(:,2), SyBr(:,3), SyBr(:,4), SyBr(:,5), SyBr(:,6), SyBr(:,7),cell2mat(arregloAnalizarSyBr), '(SBR');
    set(handles.tablaBS, 'data', VParregloSyBr);
    if(~isempty(SensiSyBr) && ~isnan(SensiSyBr))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Bradicardia Sinusal" SensiSyBr PredpSyBr size(arregloAnalizarSyBr,1) VPSyBr FPSyBr FNSyBr (FPSyBr + FNSyBr) ((FPSyBr + FNSyBr) * 100/size(arregloAnalizarSyBr,1))];
    end
end
if(~isempty(AtFl))
    [matrizAtFl, VPAtFl, FPAtFl, FNAtFl, SensiAtFl, PredpAtFl, VParregloAtFl, FParregloAtFl, FNarregloAtFl]=sensiPredAlgoritmos(AtFl(:,2), AtFl(:,3), AtFl(:,4), AtFl(:,5), AtFl(:,6), AtFl(:,7),cell2mat(arregloAnalizarAtFl), '(AFL'); 
    set(handles.tablaAA, 'data', VParregloAtFl);
    if(~isempty(SensiAtFl) && ~isnan(SensiAtFl))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Aleteo Auricular" SensiAtFl PredpAtFl size(arregloAnalizarAtFl,1) VPAtFl FPAtFl FNAtFl (FPAtFl + FNAtFl) ((FPAtFl + FNAtFl) * 100/size(arregloAnalizarAtFl,1))];
    end
end
if(~isempty(AtFib))
   [matrizAtFib, VPAtFib, FPAtFib, FNAtFib, SensiAtFib, PredpAtFib, VParregloAtFib, FParregloAtFib, FNarregloAtFib]=sensiPredAlgoritmos(AtFib(:,2), AtFib(:,3), AtFib(:,4), AtFib(:,5), AtFib(:,6), AtFib(:,7),cell2mat(arregloAnalizarAtFib), '(AFIB');
    set(handles.tablaFA, 'data', VParregloAtFib);
    if(~isempty(SensiAtFib) && ~isnan(SensiAtFib))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Fibrilacion Auricular" SensiAtFib PredpAtFib size(arregloAnalizarAtFib,1) VPAtFib FPAtFib FNAtFib (FPAtFib + FNAtFib) ((FPAtFib + FNAtFib) * 100/size(arregloAnalizarAtFib,1))];
    end
end
if(~isempty(VTa))
    [matrizVTa, VPVTa, FPVTa, FNVTa, SensiVTa, PredpVTa, VParregloVTa, FParregloVTa, FNarregloVTa]=sensiPredAlgoritmos(VTa(:,2), VTa(:,3), VTa(:,4), VTa(:,5), VTa(:,6), VTa(:,7), cell2mat(arregloAnalizarVTa), '(VT');
    set(handles.tablaTV, 'data', VParregloVTa);
    if(~isempty(SensiVTa) && ~isnan(SensiVTa))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Taquicardia ventricular" SensiVTa PredpVTa size(arregloAnalizarVTa,1) VPVTa FPVTa FNVTa (FPVTa + FNVTa) ((FPVTa + FNVTa) * 100/size(arregloAnalizarVTa,1))];
    end
end
if(~isempty(VFl))
    [matrizVFl, VPVFl, FPVFl, FNVFl, SensiVFl, PredpVFl, VParregloVFl, FParregloVFl, FNarregloVFl]=sensiPredAlgoritmos(VFl(:,2), VFl(:,3), VFl(:,4), VFl(:,5), VFl(:,6), VFl(:,7), cell2mat(arregloAnalizarVFl), '(VFL');
    set(handles.tablaFV, 'data', VParregloVFl);
    if(~isempty(SensiVFl) && ~isnan(SensiVFl))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Flutter ventricular" SensiVFl PredpVFl size(arregloAnalizarVFl,1) VPVFl FPVFl FNVFl (FPVFl + FNVFl) ((FPVFl + FNVFl) * 100/size(arregloAnalizarVFl,1))];
    end
end

if(~isempty(OtraArritmia))
    [matrizOtraArritmia, VPOtraArritmia, FPOtraArritmia, FNOtraArritmia, SensiOtraArritmia, PredpOtraArritmia, VParregloOtraArritmia, FParregloOtraArritmia, FNarregloOtraArritmia]=sensiPredAlgoritmos(OtraArritmia(:,2), OtraArritmia(:,3), OtraArritmia(:,4), OtraArritmia(:,5), OtraArritmia(:,6), OtraArritmia(:,7), cell2mat(arregloAnalizarOtraArritmia), '(OARR');
    set(handles.tablaOA, 'data', VParregloOtraArritmia);
    if(~isempty(SensiOtraArritmia) && ~isnan(SensiOtraArritmia))
        arritmiasAlgoritmo = [arritmiasAlgoritmo; registromit "Otra Arritmia" SensiOtraArritmia PredpOtraArritmia size(arregloAnalizarOtraArritmia,1) VPOtraArritmia FPOtraArritmia FNOtraArritmia (FPOtraArritmia + FNOtraArritmia) ((FPOtraArritmia + FNOtraArritmia) * 100/size(arregloAnalizarOtraArritmia,1))];
    end
end

assignin('base','arregloAnalizarNSyR', arregloAnalizarNSyR);
assignin('base','arregloAnalizarAtFib', arregloAnalizarAtFib);
assignin('base','arregloAnalizarVFl', arregloAnalizarVFl);
assignin('base','arregloAnalizarVTa', arregloAnalizarVTa);
assignin('base','arregloAnalizarSyBr', arregloAnalizarSyBr);
assignin('base','arregloAnalizarAtFl', arregloAnalizarAtFl);
assignin('base','arregloAnalizarOtraArritmia', arregloAnalizarOtraArritmia);

assignin('base', 'ecgs', ecgs2);
assignin('base', 'VParregloNSyR', VParregloNSyR);
assignin('base', 'FParregloNSyR',  FParregloNSyR);
assignin('base', 'FNarregloNSyR', FNarregloNSyR);
assignin('base', 'VParregloSyBr', VParregloSyBr);
assignin('base', 'FParregloSyBr', FParregloSyBr);
assignin('base', 'FNarregloSyBr', FNarregloSyBr);
assignin('base', 'VParregloAtFl', VParregloAtFl);
assignin('base', 'FParregloAtFl', FParregloAtFl);
assignin('base', 'FNarregloAtFl', FNarregloAtFl);
assignin('base', 'VParregloAtFib', VParregloAtFib);
assignin('base', 'FParregloAtFib', FParregloAtFib);
assignin('base', 'FNarregloAtFib', FNarregloAtFib);
assignin('base', 'VParregloVTa', VParregloVTa);
assignin('base', 'FParregloVTa', FParregloVTa);
assignin('base', 'FNarregloVTa', FNarregloVTa);
assignin('base', 'VParregloVFl', VParregloVFl);
assignin('base', 'FParregloVFl', FParregloVFl);
assignin('base', 'FNarregloVFl', FNarregloVFl);
assignin('base', 'VPArregloOtraArritmia', VParregloOtraArritmia);
assignin('base', 'FPArregloOtraArritmia', FParregloOtraArritmia);
assignin('base', 'FNArregloOtraArritmia', FNarregloOtraArritmia);



assignin('base','picosNSyR', picosNSyR);
set(handles.tablaAlgoritmo,'ColumnName', ["Registro" "Arritmia" "Sensibilidad" "Predictividad" "Total Latidos" "VP" "FP" "FN" "Deteccion fallida(latidos)" "Deteccion fallida (%)"]);
assignin('base','arritmiasAlgoritmo', arritmiasAlgoritmo);
concatenar = [];
for i=1:size(arritmiasAlgoritmo,1)
   for y=1:size(arritmiasAlgoritmo,2)
       if(y==1)
           concatenar{i,y} = char(registromit);
       elseif(y==2)
            concatenar{i,y} = char(arritmiasAlgoritmo(i,y));
       elseif(y==3)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==4)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==5)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==6)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==7)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==8)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==9)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       elseif(y==10)
            concatenar{i,y} = str2double(arritmiasAlgoritmo(i,y));
       end
   end
end
set(handles.tablaAlgoritmo,'data',[]);
set(handles.tablaAlgoritmo, 'data', concatenar);

% --- Executes when selected cell(s) is changed in tablaAnotaciones.
function tablaAnotaciones_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaAnotaciones (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VPArregloOtraArritmia;

if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, y);
    %disp(celdaValor);
    %disp(x);
    %disp(y);
    assignin('base','x', x);
    assignin('base','y', y);
    assignin('base','celdaValor', celdaValor);
end


function txt = myupdatefcn(obj,event_obj, h1, h2, opcion)
global textoactual;
global textoant;

delete(textoactual);
delete(textoant);
pos = get(event_obj,'Position');

I = get(event_obj, 'DataIndex');
set(h1, 'String', pos(1));
set(h2, 'String', pos(2));
txt = {};


% --- Executes when selected cell(s) is changed in tablaRSN.
function tablaRSN_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaRSN (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VPArregloOtraArritmia;

set(handles.arritmiaDetectada, 'String', 'Ritmo sinusal normal');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
        
    end
end


% --- Executes when selected cell(s) is changed in tablaBS.
function tablaBS_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaBS (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VPArregloOtraArritmia;

set(handles.arritmiaDetectada, 'String', 'Bradicardia sinusal');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
    
%     disp(celdaValor);
%     disp(x);
%     disp(y);
%     assignin('base','x', x);
%     assignin('base','y', y);
%     assignin('base','celdaValor', celdaValor);
end


% --- Executes when selected cell(s) is changed in tablaAS.
function tablaAS_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaAS (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VPArregloOtraArritmia;

set(handles.arritmiaDetectada, 'String', 'Arritmia sinusal');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        %disp(pos2(1));
        %disp(pos2(2));
        %disp(celdaValor);
        %disp(ecgs(celdaValor));
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
end


% --- Executes when selected cell(s) is changed in tablaTS.
function tablaTS_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaTS (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
set(handles.arritmiaDetectada, 'String', 'Taquicardia sinusal');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.edit_x_Arritmias, 'String', num2str(pos1));
        set(handles.edit_y_Arritmias, 'String', num2str(pos2));
    end
end


% --- Executes when selected cell(s) is changed in tablaAA.
function tablaAA_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaAA (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;

global NSyR;
global SyBr; 
global SyTa;
global SyAr;
global AtFl;
global AtFib;
global VTa; 
global VFl; 
global B1Gr; 
global OtraArritmia; global Resultados;

global VParregloNSyR;
global VParregloSyBr;
global VParregloAtFl;
global VParregloAtFib;
global VParregloVTa;
global VParregloVFl;
global VPArregloOtraArritmia;

set(handles.arritmiaDetectada, 'String', 'Aleteo auricular');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        
        %disp(celdaValor);
        %set(handles.prms, 'String', num2str(VParregloAtFl(find(VParregloAtFl(:,2)==celdaValor),12)));
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
end


% --- Executes when selected cell(s) is changed in tablaFA.
function tablaFA_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaFA (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
set(handles.arritmiaDetectada, 'String', 'Fibrilación auricular');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
    
end


% --- Executes when selected cell(s) is changed in tablaTV.
function tablaTV_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaTV (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
set(handles.arritmiaDetectada, 'String', 'Taquicardia ventricular');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
end


% --- Executes when selected cell(s) is changed in tablaFV.
function tablaFV_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaFV (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
set(handles.arritmiaDetectada, 'String', 'Fibrilación ventricular');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
end

function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit_y_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_y_Arritmias as text
%        str2double(get(hObject,'String')) returns contents of edit_y_Arritmias as a double


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_y_Arritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called
% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes when selected cell(s) is changed in tablaAusenciaP.
function tablaAusenciaP_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaAusenciaP (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
global Pindex;
global mayor;
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = cell2mat(eventdata.Source.Data(x, 2));
    delete(textoant);
    if(y==2) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.edit_x_Arritmias, 'String', num2str(pos2(1)));
        set(handles.edit_y_Arritmias, 'String', num2str(pos2(2)));
    end
end


% --- Executes on selection change in seleccionarArritmia.
function seleccionarArritmia_Callback(hObject, eventdata, handles)
% hObject    handle to seleccionarArritmia (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = cellstr(get(hObject,'String')) returns seleccionarArritmia contents as cell array
%        contents{get(hObject,'Value')} returns selected item from seleccionarArritmia


% --- Executes during object creation, after setting all properties.
function seleccionarArritmia_CreateFcn(hObject, eventdata, handles)
% hObject    handle to seleccionarArritmia (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

% --- Executes when selected cell(s) is changed in tablaOA.
function tablaOA_CellSelectionCallback(hObject, eventdata, handles)
% hObject    handle to tablaOA (see GCBO)
% eventdata  structure with the following fields (see MATLAB.UI.CONTROL.TABLE)
%	Indices: row and column indices of the cell(s) currently selecteds
% handles    structure with handles and user data (see GUIDATA)
global click;
global ecgs;
global textoant;
set(handles.arritmiaDetectada, 'String', 'Otra Arritmia');
if(click)
    click = false;
else
    x = eventdata.Indices(1);
    y = eventdata.Indices(2);
    celdaValor = eventdata.Source.Data(x, 1);
    delete(textoant);
    if(y == 1 || y==2 || y == 3 || y==4 || y == 5 || y==6 || y == 7 || y==8 || y == 9 || y==10 || y == 11 || y==12 || y == 13 || y==14 || y == 15 || y==16 || y==17 || y==18) 
        xlim([celdaValor-1000 celdaValor+1000]);
        pos2 = [celdaValor ecgs(celdaValor) 0];
        ecgplothandles = handles.ecgArritmias;
        hold on;
        textoant = text(pos2(1), pos2(2), '\Delta', 'HorizontalAlignment', 'center', 'VerticalAlignment', 'middle', 'Parent', ecgplothandles);
        set(handles.prms, 'String', num2str(eventdata.Source.Data(x, 2)));
            set(handles.qrsms, 'String', num2str(eventdata.Source.Data(x, 3)));
            set(handles.ritmocardiaco, 'String', num2str(eventdata.Source.Data(x, 4)));
            set(handles.ondaP, 'String', num2str(eventdata.Source.Data(x, 5)));
            set(handles.ritmoregular, 'String', num2str(eventdata.Source.Data(x, 6)));
    end
    
end


% --- Executes when user attempts to close figure1.
function figure1_CloseRequestFcn(hObject, eventdata, handles)
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: delete(hObject) closes the figure
delete(hObject);
disp("Se cerro");
clear all;





% --- Executes during object creation, after setting all properties.
function ecgArritmias_CreateFcn(hObject, eventdata, handles)
% hObject    handle to ecgArritmias (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: place code in OpeningFcn to populate ecgArritmias
%cla(handles.ecgArritmias, 'reset');
